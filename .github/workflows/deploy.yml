name: Deploy Frontend App to AWS ECS

on:
  push:
    branches:
      - main
# Updated
jobs:
    build_deploy:
        runs-on: ubuntu-latest
        environment: Staging

        steps:
            - name: Check out the code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Docker Hub
              env:
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
                DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            - name: Build, tag, and push image to Docker Hub
              id: build-image
              run: |

                docker build --build-arg REACT_APP_ENV=staging -t node_client_app .
                
                docker tag node_client_app saisivadurgaprasad/notes_app_client:staging-v7.1
                docker push saisivadurgaprasad/notes_app_client:staging-v7.1
                echo "image=saisivadurgaprasad/notes_app_client:staging-v7.1" >> $GITHUB_OUTPUT

            - name: Download task definition
              run: |
                    aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION }} \
                    --query taskDefinition > task-definition.json
              
            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-def
              uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
              with:
                task-definition: task-definition.json
                container-name: notes_app_client
                image: ${{ steps.build-image.outputs.image }}

            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
              with:
                task-definition: ${{ steps.task-def.outputs.task-definition }}
                service: ${{ secrets.ECS_SERVICE }}
                cluster: ${{ secrets.ECS_CLUSTER }}
                wait-for-service-stability: true
